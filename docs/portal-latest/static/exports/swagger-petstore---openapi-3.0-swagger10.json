{
  "swaggerVersion": "1.2",
  "basePath": "https://petstore3.swagger.io/api/v3",
  "resourcePath": "/",
  "apis": [
    {
      "path": "/pet",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update an existing pet by Id",
          "nickname": "updatePet",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/x-www-form-urlencoded",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "name",
              "description": "",
              "paramType": "form",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "photoUrls",
              "description": "",
              "paramType": "form",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "id",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "category",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "Category"
            },
            {
              "name": "tags",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "Tag"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "petStatus",
              "description": "pet status in the store",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Pet not found"
            },
            {
              "code": 405,
              "message": "Validation exception"
            }
          ],
          "uniqueItems": false,
          "$ref": "Pet"
        },
        {
          "method": "POST",
          "summary": "Add a new pet to the store",
          "nickname": "addPet",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/x-www-form-urlencoded",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "name",
              "description": "",
              "paramType": "form",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "photoUrls",
              "description": "",
              "paramType": "form",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "id",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "category",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "Category"
            },
            {
              "name": "tags",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "Tag"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "petStatus",
              "description": "pet status in the store",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ],
          "uniqueItems": false,
          "$ref": "Pet"
        }
      ]
    },
    {
      "path": "/pet/findByStatus",
      "operations": [
        {
          "method": "GET",
          "summary": "Multiple status values can be provided with comma separated strings",
          "nickname": "findPetsByStatus",
          "parameters": [
            {
              "name": "status",
              "description": "Status values that need to be considered for filter",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "available",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid status value"
            }
          ],
          "items": {
            "$ref": "Pet"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/pet/findByTags",
      "operations": [
        {
          "method": "GET",
          "summary": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "nickname": "findPetsByTags",
          "parameters": [
            {
              "name": "tags",
              "description": "Tags to filter by",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid tag value"
            }
          ],
          "items": {
            "$ref": "Pet"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/pet/{petId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a single pet",
          "nickname": "getPetById",
          "parameters": [
            {
              "name": "petId",
              "description": "ID of pet to return",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "authorizations": {
            "api_key": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Pet not found"
            }
          ],
          "uniqueItems": false,
          "$ref": "Pet"
        },
        {
          "method": "POST",
          "summary": "Updates a pet in the store with form data",
          "nickname": "updatePetWithForm",
          "parameters": [
            {
              "name": "petId",
              "description": "ID of pet that needs to be updated",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "name",
              "description": "Name of pet that needs to be updated",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "status",
              "description": "Status of pet that needs to be updated",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "DELETE",
          "summary": "delete a pet",
          "nickname": "deletePet",
          "parameters": [
            {
              "name": "petId",
              "description": "Pet id to delete",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "api_key",
              "description": "",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid pet value"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/pet/{petId}/uploadImage",
      "operations": [
        {
          "method": "POST",
          "summary": "uploads an image",
          "nickname": "uploadFile",
          "parameters": [
            {
              "name": "petId",
              "description": "ID of pet to update",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/octet-stream",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "additionalMetadata",
              "description": "Additional Metadata",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "object"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/octet-stream"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "PetImage"
        }
      ]
    },
    {
      "path": "/store/inventory",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a map of status codes to quantities",
          "nickname": "getInventory",
          "parameters": [],
          "authorizations": {
            "api_key": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "path": "/store/order",
      "operations": [
        {
          "method": "POST",
          "summary": "Place a new order in the store",
          "nickname": "placeOrder",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/x-www-form-urlencoded",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "petId",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "quantity",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "shipDate",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "orderStatus",
              "description": "Order Status",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "approved",
              "enum": [
                "placed",
                "approved",
                "delivered"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "complete",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "boolean"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ],
          "uniqueItems": false,
          "$ref": "Order"
        }
      ]
    },
    {
      "path": "/store/order/{orderId}",
      "operations": [
        {
          "method": "GET",
          "summary": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "nickname": "getOrderById",
          "parameters": [
            {
              "name": "orderId",
              "description": "ID of order that needs to be fetched",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Order not found"
            }
          ],
          "uniqueItems": false,
          "$ref": "Order"
        },
        {
          "method": "DELETE",
          "summary": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
          "nickname": "deleteOrder",
          "parameters": [
            {
              "name": "orderId",
              "description": "ID of the order that needs to be deleted",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Order not found"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/user",
      "operations": [
        {
          "method": "POST",
          "summary": "This can only be done by the logged in user.",
          "nickname": "createUser",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/x-www-form-urlencoded",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "username",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "firstName",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastName",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "email",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "password",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "phone",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userStatus",
              "description": "User Status",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "User"
        }
      ]
    },
    {
      "path": "/user/createWithList",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates list of users with given input array",
          "nickname": "createUsersWithListInput",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "User"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "User"
        }
      ]
    },
    {
      "path": "/user/login",
      "operations": [
        {
          "method": "GET",
          "summary": "Logs user into the system",
          "nickname": "loginUser",
          "parameters": [
            {
              "name": "username",
              "description": "The user name for login",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "password",
              "description": "The password for login in clear text",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid username/password supplied"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    },
    {
      "path": "/user/logout",
      "operations": [
        {
          "method": "GET",
          "summary": "Logs out current logged in user session",
          "nickname": "logoutUser",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/user/{name}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get user by user name",
          "nickname": "getUserByName",
          "parameters": [
            {
              "name": "name",
              "description": "The name that needs to be fetched. Use user1 for testing.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid username supplied"
            },
            {
              "code": 404,
              "message": "User not found"
            }
          ],
          "uniqueItems": false,
          "$ref": "User"
        },
        {
          "method": "PUT",
          "summary": "This can only be done by the logged in user.",
          "nickname": "updateUser",
          "parameters": [
            {
              "name": "name",
              "description": "name that need to be deleted",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/x-www-form-urlencoded",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "username",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "firstName",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastName",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "email",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "password",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "phone",
              "description": "",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userStatus",
              "description": "User Status",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "DELETE",
          "summary": "This can only be done by the logged in user.",
          "nickname": "deleteUser",
          "parameters": [
            {
              "name": "name",
              "description": "The name that needs to be deleted",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid username supplied"
            },
            {
              "code": 404,
              "message": "User not found"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    }
  ],
  "models": {
    "Order": {
      "id": "Order",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "orderStatus": {
          "description": "Order Status",
          "defaultValue": "approved",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "complete": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Customer": {
      "id": "Customer",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "items": {
            "$ref": "Address"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Address": {
      "id": "Address",
      "required": [],
      "properties": {
        "street": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Category": {
      "id": "Category",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "User": {
      "id": "User",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userStatus": {
          "description": "User Status",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Tag": {
      "id": "Tag",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Pet": {
      "id": "Pet",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "photoUrls": {
          "description": "",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "id": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Category"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "petStatus": {
          "description": "pet status in the store",
          "defaultValue": "",
          "enum": [
            "available",
            "pending",
            "sold"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PetImage": {
      "id": "PetImage",
      "required": [],
      "properties": {
        "code": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    }
  },
  "authorizations": {
    "api_key": {
      "passAs": "header",
      "keyname": "api_key",
      "type": "apiKey"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}