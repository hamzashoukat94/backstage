{
  "openapi": "3.1.0",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "version": "1.0.11"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "servers": [
    {
      "url": "https://petstore3.swagger.io/api/v3",
      "variables": {}
    }
  ],
  "paths": {
    "/pet": {
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "updatePet",
        "description": "Update an existing pet by Id",
        "operationId": "updatePet",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "doggie"
                    ]
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": ""
                  },
                  "id": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "description": ""
                  },
                  "petStatus": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PetStatus"
                      },
                      {
                        "description": "pet status in the store"
                      }
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "headers": {},
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "addPet",
        "description": "Add a new pet to the store",
        "operationId": "addPet",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "doggie"
                    ]
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": ""
                  },
                  "id": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "description": ""
                  },
                  "petStatus": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PetStatus"
                      },
                      {
                        "description": "pet status in the store"
                      }
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "findPetsByStatus",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/status"
                },
                {
                  "description": "Status values that need to be considered for filter"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "findPetsByTags",
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "description": "",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "getPetById",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "updatePetWithForm",
        "description": "Updates a pet in the store with form data",
        "operationId": "updatePetWithForm",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of pet that needs to be updated",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of pet that needs to be updated",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "deletePet",
        "description": "delete a pet",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          },
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploadFile",
        "description": "uploads an image",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/octet-stream",
              "type": "string"
            }
          },
          {
            "name": "additionalMetadata",
            "in": "query",
            "description": "Additional Metadata",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "contentEncoding": "base64"
                  }
                },
                "contentMediaType": "multipart/form-data"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetImage"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/store/inventory": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "getInventory",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "contentMediaType": "application/json"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": []
    },
    "/store/order": {
      "post": {
        "tags": [
          "store"
        ],
        "summary": "placeOrder",
        "description": "Place a new order in the store",
        "operationId": "placeOrder",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "petId": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      198772
                    ]
                  },
                  "quantity": {
                    "type": "integer",
                    "contentEncoding": "int32",
                    "examples": [
                      7
                    ]
                  },
                  "shipDate": {
                    "type": "string",
                    "contentEncoding": "date-time",
                    "examples": [
                      "2023-05-31T00:00:00Z"
                    ]
                  },
                  "orderStatus": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/OrderStatus"
                      },
                      {
                        "description": "Order Status"
                      }
                    ]
                  },
                  "complete": {
                    "type": "boolean",
                    "examples": [
                      true
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "getOrderById",
        "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "deleteOrder",
        "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "contentEncoding": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "createUser",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "username": {
                    "type": "string",
                    "examples": [
                      "theUser"
                    ]
                  },
                  "firstName": {
                    "type": "string",
                    "examples": [
                      "John"
                    ]
                  },
                  "lastName": {
                    "type": "string",
                    "examples": [
                      "James"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "examples": [
                      "john@email.com"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "examples": [
                      "12345"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "examples": [
                      "12345"
                    ]
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "contentEncoding": "int32",
                    "examples": [
                      1
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "createUsersWithListInput",
        "description": "Creates list of users with given input array",
        "operationId": "createUsersWithListInput",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                },
                "description": "",
                "contentMediaType": "application/json"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "successful operation",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "loginUser",
        "description": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "calls per hour allowed by the user",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "date in UTC when token expires",
                      "contentMediaType": "text/plain"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "contentMediaType": "application/json"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "logoutUser",
        "description": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/user/{name}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "getUserByName",
        "description": "Get user by user name",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "User not found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "updateUser",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "contentEncoding": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "username": {
                    "type": "string",
                    "examples": [
                      "theUser"
                    ]
                  },
                  "firstName": {
                    "type": "string",
                    "examples": [
                      "John"
                    ]
                  },
                  "lastName": {
                    "type": "string",
                    "examples": [
                      "James"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "examples": [
                      "john@email.com"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "examples": [
                      "12345"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "examples": [
                      "12345"
                    ]
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "contentEncoding": "int32",
                    "examples": [
                      1
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "deleteUser",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "User not found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              10
            ]
          },
          "petId": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              198772
            ]
          },
          "quantity": {
            "type": "integer",
            "contentEncoding": "int32",
            "examples": [
              7
            ]
          },
          "shipDate": {
            "type": "string",
            "contentEncoding": "date-time",
            "examples": [
              "2023-05-31T00:00:00Z"
            ]
          },
          "orderStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              },
              {
                "description": "Order Status"
              }
            ]
          },
          "complete": {
            "type": "boolean",
            "examples": [
              true
            ]
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              100000
            ]
          },
          "username": {
            "type": "string",
            "examples": [
              "fehguy"
            ]
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": ""
          }
        }
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "examples": [
              "437 Lytton"
            ]
          },
          "city": {
            "type": "string",
            "examples": [
              "Palo Alto"
            ]
          },
          "state": {
            "type": "string",
            "examples": [
              "CA"
            ]
          },
          "zip": {
            "type": "string",
            "examples": [
              "94301"
            ]
          }
        }
      },
      "Category": {
        "title": "Category",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              1
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Dogs"
            ]
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              10
            ]
          },
          "username": {
            "type": "string",
            "examples": [
              "theUser"
            ]
          },
          "firstName": {
            "type": "string",
            "examples": [
              "John"
            ]
          },
          "lastName": {
            "type": "string",
            "examples": [
              "James"
            ]
          },
          "email": {
            "type": "string",
            "examples": [
              "john@email.com"
            ]
          },
          "password": {
            "type": "string",
            "examples": [
              "12345"
            ]
          },
          "phone": {
            "type": "string",
            "examples": [
              "12345"
            ]
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "contentEncoding": "int32",
            "examples": [
              1
            ]
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "contentEncoding": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Pet": {
        "title": "Pet",
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "examples": [
              "doggie"
            ]
          },
          "photoUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "id": {
            "type": "integer",
            "contentEncoding": "int64",
            "examples": [
              10
            ]
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": ""
          },
          "petStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PetStatus"
              },
              {
                "description": "pet status in the store"
              }
            ]
          }
        }
      },
      "PetImage": {
        "title": "PetImage",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "OrderStatus": {
        "title": "OrderStatus",
        "enum": [
          "placed",
          "approved",
          "delivered"
        ],
        "type": "string",
        "description": "Order Status"
      },
      "PetStatus": {
        "title": "PetStatus",
        "enum": [
          "available",
          "pending",
          "sold"
        ],
        "type": "string",
        "description": "pet status in the store"
      },
      "status": {
        "title": "status",
        "enum": [
          "available",
          "pending",
          "sold"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}